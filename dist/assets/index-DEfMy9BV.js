import{ao as i,ap as n,aq as c,as as T,ar as d,at as m,au as l,az as f,aA as x,am as p,aD as E,aE as B,ag as h,an as g,aF as y,aG as H,av as b,aH as u,aI as I,ae as v,aw as z,aB as S,aJ as C,aK as O,aL as A,ad as k,aM as L,aN as R,ax as w,aC as U,ay as q,af as F,aO as P}from"./index-DpoGkAQz.js";import{F as K,a as N,I as V,b as D,c as J,d as M,T as j,q as Q,s as W,u as X,v as Y,y as Z,E as _,w as $,x as aa,B as sa,e as ea,C as ra,h as oa,j as ta,l as ia,f as na,D as ca,g as Ta,i as da,k as ma,n as la,o as fa,G as xa,H as pa,m as Ea,r as Ba,K as ha,L as ga,J as ya,M as Ha,N as ba,O as ua,z as Ia,A as va,p as za,t as Sa}from"./number-4kq8ISs5.js";function r({chains:a,id:s}){return a.find(e=>e.id===s)}export{i as BaseError,K as FeeCapTooHighError,n as IntegerOutOfRangeError,N as InvalidAddressError,V as InvalidChainIdError,c as InvalidHexBooleanError,D as InvalidLegacyVError,J as InvalidSerializableTransactionError,M as InvalidStorageKeySizeError,T as SizeExceedsPaddingSizeError,d as SizeOverflowError,m as SliceOffsetOutOfBoundsError,j as TipAboveFeeCapError,Q as assertTransactionEIP1559,W as assertTransactionEIP2930,X as assertTransactionLegacy,Y as blobsToCommitments,Z as blobsToProofs,l as boolToBytes,f as boolToHex,x as bytesToHex,_ as checksumAddress,$ as commitmentToVersionedHash,aa as commitmentsToVersionedHashes,sa as concatHex,ea as defineBlock,ra as defineChain,oa as defineTransaction,ta as defineTransactionReceipt,ia as defineTransactionRequest,p as etherUnits,r as extractChain,na as formatBlock,E as formatEther,ca as formatGwei,Ta as formatLog,da as formatTransaction,ma as formatTransactionReceipt,la as formatTransactionRequest,B as formatUnits,h as fromHex,fa as getTransactionType,g as gweiUnits,y as hexToBigInt,H as hexToBool,b as hexToBytes,u as hexToNumber,I as hexToString,xa as isAddress,v as isHex,pa as keccak256,Ea as maxUint16,z as numberToBytes,S as numberToHex,C as pad,O as padBytes,A as padHex,k as parseEther,L as parseUnits,Ba as rpcTransactionType,ha as serializeAccessList,ga as serializeTransaction,ya as sha256,R as size,Ha as slice,ba as sliceBytes,ua as sliceHex,w as stringToBytes,U as stringToHex,Ia as toBlobSidecars,va as toBlobs,q as toBytes,F as toHex,za as toRlp,Sa as transactionType,P as trim};
